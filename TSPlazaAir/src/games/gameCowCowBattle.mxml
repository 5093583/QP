<?xml version="1.0" encoding="utf-8"?>
<base:GameBaseModule
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx"
	implements="base.IModuleGame"
	xmlns:base="base.*"
	horizontalCenter="0" verticalCenter="0"
	maxWidth="1300" maxHeight="900"
	creationComplete="gamebasemodule1_creationCompleteHandler(event)"
	width="800" height="600" xmlns:view="games.cowlord.view.*" 
	xmlns:cowlord="games.cowlord.*"
	xmlns:com="com.*"  >
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import base.SkinClass;
			import base.StaticVars;
			
			import com.greensock.TweenMax;
			import com.plaza.MsgManager;
			
			import cx.client.logon.model.UserModel;
			import cx.gamebase.Interface.IUserViewSink;
			import cx.gamebase.enum.enTimeType;
			import cx.gamebase.events.GameEvent;
			import cx.gamebase.sturuct.GameCmd;
			import cx.gamebase.sturuct.tagServerTimer;
			import cx.gamebase.sturuct.tagUserInfoHead;
			import cx.net.Interface.IClientSocket;
			
			import flash.utils.getTimer;
			
			import gameAssets.cowcowBattle.CCBattleSkinClass;
			
			import games.baccarat.struct.CMD_S_OutPlayerReson;
			import games.cowlord.model.CowModle;
			import games.cowlord.model.HistoryModel;
			import games.cowlord.struct.CMD_C_PlaceJetton;
			import games.cowlord.struct.CMD_S_ApplyBanker;
			import games.cowlord.struct.CMD_S_CancelBanker;
			import games.cowlord.struct.CMD_S_ChangeBanker;
			import games.cowlord.struct.CMD_S_GameEnd;
			import games.cowlord.struct.CMD_S_GameFree;
			import games.cowlord.struct.CMD_S_GameStart;
			import games.cowlord.struct.CMD_S_PlaceJetton;
			import games.cowlord.struct.CMD_S_PlaceJettonFail;
			import games.cowlord.struct.CMD_S_StatusFree;
			import games.cowlord.struct.CMD_S_StatusJetton;
			import games.cowlord.struct.CMD_S_StatusPlay;
			import games.cowlord.struct.tagServerGameRecord;
			import games.cowlord.utils.ConstCMD;
			
			import mx.events.FlexEvent;
			import mx.managers.CursorManagerPriority;
			
			import t.cx.air.TConst;
			import t.cx.air.TScore;
			import t.cx.air.controller.Controller;
			import t.cx.air.controller.TEvent;
			import t.cx.air.utils.IDConvert;
			import t.cx.air.utils.Memory;
			
			
			private var _cowModel : CowModle;
			private var _historyVec : Array;
			private var _applyBanker : Array;
			
			private var _tipAreaLimitScore:Number;
			private var _tipUserMaxScore:Number;
			private var _tipApplyBankerCondition:Number;
			
			private var _userAreaScore:Array;
			private var _userAreaLimitAry:Array;
			
			private var _allUserAreaScore:Array;
			
			
			private var _onShowAide:Boolean = false;
			
			
			private var _chipAry:Array = [1, 5, 10, 50, 100, 1000, 10000];
			
			
			[Bindable]
			private var tWinCount : int = 0;
			[Bindable]
			private var dWinCount : int = 0;
			[Bindable]
			private var xWinCount : int = 0;
			[Bindable]
			private var hWinCount : int = 0;
			
			private var showTip:Boolean = true;
			private var firstTryPlay:Boolean = true;
			
			override protected function OnPreInit():Boolean
			{
				_cowModel = CowModle._getInstance();
				return true;
			}
			override protected function OnInit():Boolean
			{
				if( !super.OnInit() ) return false;
				//设置用户回调钩子
				_cowModel.m_User.SetUserViewSink(theUserView as IUserViewSink);
				//初始化游戏服务配置
				_cowModel.m_Attribute.playerCount = ConstCMD.GAME_PLAYER;
				
				//开始加载音效
				_cowModel.m_Sound.StartLoad('data/sound/Baccarat_sound' + (TConst.TC_DEUBG == 1?'.swf':'.cxm'));
				return true;
			}
			public function logonSuccess():void
			{
				if(theUserView)	theUserView.init();
				super.addToStage();
			}
			
			
			public function updateGameNum():void
			{
				//				if(theUserView && theUserView.ZGoldTxt)
				//					theUserView.ZGoldTxt.text	= '牌局:' + StaticVars.szGameNum;
			}
			
			override protected function OnSoundLoadComplete(e : TEvent) : void
			{
				super.OnSoundLoadComplete(e);
				_cowModel.m_Sound.Play('m_backgd',true);
			}
			//退出游戏
			override protected function OnSubExitGame() : Boolean
			{
				TweenMax.killAll();
				onDestroyAllDos();
				return true;
			}
			/**
			 * 游戏场景
			 **/
			override protected function OnGameFrameScene(pBuffer:ByteArray, wDataSize:int, pIClientSocket:IClientSocket):Boolean
			{
				super.OnGameFrameScene(pBuffer,wDataSize,pIClientSocket);
				var i : int = 0;
				if(_cowModel == null)	return true;
				switch(_cowModel.m_bGameStatus)
				{
					case TConst.GS_FREE:						//空闲状态
					{
						var RecvStatusFree:CMD_S_StatusFree = CMD_S_StatusFree._readBuffer(pBuffer);
						_cowModel.m_lApplyBankerCondition 	= RecvStatusFree.lApplyBankerCondition;
						_cowModel.m_wBankerID 			    = RecvStatusFree.wBankerUser;
						
						StaticVars.isTryPlayed = RecvStatusFree.cbIsTryPlay == 1?true:false;
						
						_cowModel.m_bEnableSysBanker		= RecvStatusFree.bEnableSysBanker;
						_cowModel.m_wCbBankerTime			= RecvStatusFree.cbBankerTime;
						//_cowModel.m_lBankerScore			= RecvStatusFree.lBankerScore;
						_cowModel.m_wBankerScore			= RecvStatusFree.lBankerWinScore;
						_cowModel.m_lAreaLimitScoreLest		= RecvStatusFree.lAreaLimitScoreLest;
						
						_cowModel.m_wlChipScore = RecvStatusFree.lChipScore;
						
						//						_cowModel.m_lUserMaxScore			= RecvStatusFree.lUserMaxScore;
						//						_cowModel.m_lChipScore 				= RecvStatusFree.lChipScore;
						StartClock(RecvStatusFree.cbTimeLeave * 1000);
						setTheStatus(1);
						theUserView.InitInfo();
						
						_userAreaLimitAry = Memory._newArrayAndSetValue(4, 0);
						for(i = 0 ; i < 4 ; i++)
						{
							_cowModel.lAreaLimitScore[i] = RecvStatusFree.lAreaLimitScore;
							_cowModel.currentAreaLimit[i] = _cowModel.lAreaLimitScore[i] ;
							//							this['areaLimit_' + i].text = TScore.toStringEx(RecvStatusFree.lAreaLimitScore);
							this['areaLimit_' + i].text = TScore.toStringEx( int(RecvStatusFree.lBankerScore/40) );
							_userAreaLimitAry[i] = int(RecvStatusFree.lBankerScore/40);
						}
						
						_tipAreaLimitScore		= RecvStatusFree.lAreaLimitScore;
						_tipUserMaxScore		= RecvStatusFree.lUserMaxScore;
						_tipApplyBankerCondition= RecvStatusFree.lApplyBankerCondition;
						
						if(firstTryPlay && StaticVars.isTryPlayed)
						{
							firstTryPlay = false;
							StaticVars.tryPlayScore= RecvStatusFree.lTryPlayScore;
							theUserView.GoldTxt.text = TScore.toFloatEx(StaticVars.tryPlayScore).toFixed(2);
							
							if(StaticVars.isTryPlayed)
								MsgManager.getInstance().showMessage1('您当前进入的是试玩房间，只为体验游戏而设，输赢金额不参与房间外结算！', showTheTip,0,-50,false,1);
							
							//							if(StaticVars.isTryPlayed && theUserView)
							//							{
							//								theUserView.ZTimeTxt.text = '系统坐庄';
							//							}
						}
						
						if(StaticVars.isTryPlayed)
							tryplay.visible = true;
						else
							showTheTip();
						
						return true;
					}
					case ConstCMD.GS_GAME_END:			//结束状态
					{
						var resvGSGameEnd:CMD_S_StatusPlay = CMD_S_StatusPlay._readBuffer(pBuffer);
						_cowModel.m_lApplyBankerCondition = resvGSGameEnd.lApplyBankerCondition;
						_cowModel.m_wBankerID = resvGSGameEnd.wBankerUser;
						
						StaticVars.isTryPlayed = resvGSGameEnd.cbIsTryPlay == 1?true:false;
						_cowModel.m_bEnableSysBanker	= resvGSGameEnd.bEnableSysBanker;
						
						//						if(_cowModel.m_wBankerID == _cowModel.m_User.GetMeChairID()){
						//						}else{
						//						}
						_userAreaLimitAry = Memory._newArrayAndSetValue(4, 0);
						for(i = 0 ; i < 4 ; i++)
						{
							_cowModel.lAreaLimitScore[i] = resvGSGameEnd.lAreaLimitScore;
							_cowModel.currentAreaLimit[i] = _cowModel.lAreaLimitScore[i] ;
							//							this['areaLimit_' + i].text = TScore.toStringEx(resvGSGameEnd.lAreaLimitScore);
							this['areaLimit_' + i].text = TScore.toStringEx( int(resvGSGameEnd.lBankerScore/40) );
							_userAreaLimitAry[i] = int(resvGSGameEnd.lBankerScore/40);
						}
						
						_cowModel.m_wlChipScore = resvGSGameEnd.lChipScore;
						setTheStatus(3);
						StartClock(resvGSGameEnd.cbTimeLeave*1000);										//当前状态剩余时间
						
						_cowModel.m_wJieSuanArray[0] = resvGSGameEnd.lEndUserScore;									//玩家赢金币
						_cowModel.m_wJieSuanArray[1] = resvGSGameEnd.lEndUserReturnScore;							//玩家返还的金币
						_cowModel.m_wJieSuanArray[2] = resvGSGameEnd.lBankerWinScore;								//庄家赢的金币
						
						_cowModel.m_wUserGold		 +=  _cowModel.UpdateUserScore	;								//自己手中的金币
						
						//theUserView.theSTxt.text	 =  TScore.toStringEx(_cowModel.m_wUserGold);
						_cowModel.m_wUserScore 		 +=	_cowModel.m_wJieSuanArray[0];								//更新自己成绩
						_cowModel.m_wDiceNumber 	= resvGSGameEnd.wSiceCount[0] + resvGSGameEnd.wSiceCount[1];	//骰子点数
						_cowModel.lAreaWinner 		= resvGSGameEnd.lAreaWinner;									//输赢
						_cowModel.m_wCBCardOx 		= resvGSGameEnd.cbCardType;										//结束牌型
						//theCardView.StatusGameEndChad(resvGSGameEnd.cbTableCardArray);								//发牌
						theUserView.InitInfo();
						TweenMax.killAll();
						
						_tipAreaLimitScore		= resvGSGameEnd.lAreaLimitScore;
						_tipUserMaxScore		= resvGSGameEnd.lUserMaxScore;
						_tipApplyBankerCondition= resvGSGameEnd.lApplyBankerCondition;
						
						
						setChipClickHandler(false);
						setAreaAddEnable(false);
						setChipAddEnable(false);
						this.removeEventListener(MouseEvent.RIGHT_CLICK, rightClickHandler);
						
						
						if(firstTryPlay && StaticVars.isTryPlayed)
						{
							firstTryPlay = false;
							StaticVars.tryPlayScore= resvGSGameEnd.lTryPlayScore;
							theUserView.GoldTxt.text = TScore.toFloatEx(StaticVars.tryPlayScore).toFixed(2);
							
							if(StaticVars.isTryPlayed)
								MsgManager.getInstance().showMessage1('您当前进入的是试玩房间，只为体验游戏而设，输赢金额不参与房间外结算！', showTheTip,0,-50,false,1);
							
							//							if(StaticVars.isTryPlayed && theUserView)
							//							{
							//								theUserView.ZTimeTxt.text = '系统坐庄';
							//							}
						}
						
						if(StaticVars.isTryPlayed)
							tryplay.visible = true;
						else
							showTheTip();
						
						return true;
					}
					case ConstCMD.GS_PLACE_JETTON:		//下注状态
					{
						var recvPlaceJetton:CMD_S_StatusJetton = CMD_S_StatusJetton._readBuffer(pBuffer);
						_cowModel.m_lApplyBankerCondition = recvPlaceJetton.lApplyBankerCondition;					//申请上庄条件
						_cowModel.m_wBankerID = recvPlaceJetton.wBankerUser;
						
						StaticVars.isTryPlayed = recvPlaceJetton.cbIsTryPlay == 1?true:false;
						_cowModel.m_bEnableSysBanker	= recvPlaceJetton.bEnableSysBanker;
						
						_userAreaLimitAry = Memory._newArrayAndSetValue(4, 0);
						for(i = 0 ; i < 4 ; i++)
						{
							_cowModel.lAreaLimitScore[i] = recvPlaceJetton.lAreaLimitScore;
							_cowModel.currentAreaLimit[i] = _cowModel.lAreaLimitScore[i] ;
							//							this['areaLimit_' + i].text = TScore.toStringEx(recvPlaceJetton.lAreaLimitScore);
							this['areaLimit_' + i].text = TScore.toStringEx( int(recvPlaceJetton.lBankerScore/40) );
							_userAreaLimitAry[i] = int(recvPlaceJetton.lBankerScore/40);
						}
						
						
						_cowModel.m_wlChipScore = recvPlaceJetton.lChipScore;
						setTheStatus(2);
						StartClock(recvPlaceJetton.cbTimeLeft*1000);										//当前状态剩余时间
						theUserView.InitInfo();
						
						_tipAreaLimitScore		= recvPlaceJetton.lAreaLimitScore;
						_tipUserMaxScore		= recvPlaceJetton.lUserMaxScore;
						_tipApplyBankerCondition= recvPlaceJetton.lApplyBankerCondition;
						
						
						setChipClickHandler(false);
						setAreaAddEnable(false);
						setChipAddEnable(false);
						this.removeEventListener(MouseEvent.RIGHT_CLICK, rightClickHandler);
						
						
						if(firstTryPlay && StaticVars.isTryPlayed)
						{
							firstTryPlay = false;
							StaticVars.tryPlayScore= recvPlaceJetton.lTryPlayScore;
							theUserView.GoldTxt.text = TScore.toFloatEx(StaticVars.tryPlayScore).toFixed(2);
							
							if(StaticVars.isTryPlayed)
								MsgManager.getInstance().showMessage1('您当前进入的是试玩房间，只为体验游戏而设，输赢金额不参与房间外结算！', showTheTip,0,-50,false,1);
							
							//							if(StaticVars.isTryPlayed && theUserView)
							//							{
							//								theUserView.ZTimeTxt.text = '系统坐庄';
							//							}
						}
						
						if(StaticVars.isTryPlayed)
							tryplay.visible = true;
						else
							showTheTip();
						
						return true;
					}
				}
				return false;
			}
			/**
			 * 接收服务器发送的消息
			 **/
			override protected function OnTcpGameEvent(wSubCmd:uint, pBuffer:ByteArray, wDataSize:int, pIClientSocket:IClientSocket):Boolean
			{
				
				if(super.OnTcpGameEvent(wSubCmd,pBuffer,wDataSize,pIClientSocket)) return true;
				var wMeChairID : uint = _cowModel.m_User.GetMeChairID();
				var i : uint = 0;
				
				switch(wSubCmd)
				{
					case ConstCMD.SUB_S_GAME_FREE:							//游戏空闲
					{
						var recvGameFree:CMD_S_GameFree = CMD_S_GameFree._readBuffer(pBuffer);
						
						_userAreaLimitAry = Memory._newArrayAndSetValue(4, 0);
						for(i = 0 ; i < 4 ; i++)
						{
							_cowModel.currentAreaLimit[i] = _cowModel.lAreaLimitScore[i];
							//							this['areaLimit_' + i].text = TScore.toStringEx(_cowModel.currentAreaLimit[i]);
						}
						theUserView.InitInfo();
						
						return true;
					}
						
					case ConstCMD.SUB_S_GAME_START:							//游戏开始
					{
						var recvStartGame:CMD_S_GameStart = CMD_S_GameStart._readBuffer(pBuffer);
						
						_cowModel.m_Sound.PlayEffect(TConst.INVALID_CHAIR,'beginGame');
						//						theUserView.ZIDTxt.text		= StaticVars.serverName;
						//						theUserView.ZGoldTxt.text	= '牌局:' + StaticVars.szGameNum;
						
						_userAreaLimitAry = Memory._newArrayAndSetValue(4, 0);
						for(i = 0 ; i < 4 ; i++)
						{
							this['areaLimit_' + i].text = TScore.toStringEx( int(recvStartGame.lBankerScore/40) );
							_userAreaLimitAry[i] = int(recvStartGame.lBankerScore/40);
						}
						
						return true;
					}
					case ConstCMD.SUB_S_PLACE_JETTON:			   			 //用户下注
					{
						var recvPlaceJetton:CMD_S_PlaceJetton = CMD_S_PlaceJetton._readBuffer(pBuffer);
						return UserAddScoreHandler(recvPlaceJetton);
					}
					case ConstCMD.SUB_S_SEND_RECORD:
					{
						var recordCount : uint = wDataSize / tagServerGameRecord.SIZE;
						var history : HistoryModel = HistoryModel._getInstance();
						for(i = 0;i<recordCount;i++)
						{
							history.InsertHistory( tagServerGameRecord._readBuffer(pBuffer) );
						}
						return true;
					}
					case ConstCMD.SUB_S_GAME_END:			   				//游戏结束
					{
						var recvGameEnd:CMD_S_GameEnd = CMD_S_GameEnd._readBuffer(pBuffer);
						return GameEndHandler(recvGameEnd);
						//return true;
					}
						
					case ConstCMD.SUB_S_APPLY_BANKER:			  	 		 //申请庄家
					{
						var recvApply:CMD_S_ApplyBanker = CMD_S_ApplyBanker._readBuffer(pBuffer);
						
						if(recvApply.wApplyUser == _cowModel.m_User.GetMeChairID()) 
						{ 
							_cowModel.m_cbApplyBanker = true; 
							
							theApplyBanker.source = CCBattleSkinClass.land_cancel;
							theApplyBanker.enabled = false;
						}
						
						ApplyBanker(recvApply.wApplyUser);
						//return ApplyBankerHandler(recvApply);
						return true;
					}
					case ConstCMD.SUB_S_CHANGE_BANKER:			    			//切换庄家
					{
						var recvChangeBanker:CMD_S_ChangeBanker = CMD_S_ChangeBanker._readBuffer(pBuffer);
						if(_cowModel == null)	return true;
						if(_cowModel.m_wBankerID == _cowModel.m_User.GetMeChairID()) { _cowModel.m_cbApplyBanker = false; }
						
						_cowModel.m_wBankerID = recvChangeBanker.wBankerUser;
						
						if(_cowModel.m_wBankerID == _cowModel.m_User.GetMeChairID()) { _cowModel.m_cbApplyBanker = true; }
						
						var userInfoBank : tagUserInfoHead;
						if(_cowModel.m_wBankerID != TConst.INVALID_CHAIR)
						{
							userInfoBank = _cowModel.m_User.GetUserByChair(_cowModel.m_wBankerID);
							if(userInfoBank)
								_cowModel.m_lBankerScore = _cowModel.m_User.GetUserByChair(_cowModel.m_wBankerID).UserScoreInfo.lScore;
						}
						
						userInfoBank = _cowModel.m_User.GetUserByChair(recvChangeBanker.wBankerUser);
						if(userInfoBank != null) 
						{
							userInfoBank.UserScoreInfo.lScore = recvChangeBanker.lBankerScore;
						}
						
						_cowModel.m_wBankerScore = 0;
						_cowModel.m_wCbBankerTime = 0;
						ShowLunHuan();
						theUserView.InitInfo();
						setStatus(4);
						
						
						if(recvChangeBanker.wBankerUser != TConst.INVALID_CHAIR)
						{
							var landName:String = '';
							
							if(StaticVars.isTryPlayed)
							{
								if(recvChangeBanker.wBankerUser == _cowModel.m_User.GetMeChairID())
									landName = UserModel._getInstance().selfInfo.szAccount;
								else
									landName = '游戏玩家';
								
								MsgManager.getInstance().showMessage1('[ ' + landName + ' ]成功上庄,携带金币'+TScore.toStringEx(recvChangeBanker.lBankerScore)+'!', null, 0, -50, true,1);
							}
							else
							{
								if(recvChangeBanker.wBankerUser == _cowModel.m_User.GetMeChairID())
									landName = UserModel._getInstance().selfInfo.szAccount;
								else
									landName = '游戏玩家';
								
								MsgManager.getInstance().showMessage1('[ ' + landName + ' ]成功上庄,携带金币'+TScore.toStringEx(recvChangeBanker.lBankerScore)+'!', null, 0, -50, true,1);
							}
						}
						
						//return ChangeBankerHandler(recvChangeBanker);
						return true;
					}
					case ConstCMD.SUB_S_PLACE_JETTON_FAIL:			    		//下注失败
					{
						var recvPlaceJettonFail:CMD_S_PlaceJettonFail = CMD_S_PlaceJettonFail._readBuffer(pBuffer);
						//	var quyu:int = recvPlaceJettonFail.lJettonArea;
						//	theCardView['CardAction_'+quyu]['JettonFail'].show();					//下注失败提示
						var str:String;
						if(recvPlaceJettonFail.cbFailType == 0)
							str = '下注失败，您的下注超过手中下注金币最大值！';
						else if(recvPlaceJettonFail.cbFailType == 1)
							str = '下注失败，您的下注超过该区域限制的最大值！';
						else if(recvPlaceJettonFail.cbFailType == 2)
							str = '下注失败，您的下注超过手中下注金币最大值！';
						else if(recvPlaceJettonFail.cbFailType == 3)
							str = '下注失败，您的下注超过庄家下注限制的最大值！';
						else if(recvPlaceJettonFail.cbFailType == 4)
							str = '下注失败，您手中的金币不足！';
						else if(recvPlaceJettonFail.cbFailType == 5)
							str = '下注失败，庄家离开！请稍后尝试！';
						else if(recvPlaceJettonFail.cbFailType == 6)
							str = '下注失败，请稍后尝试！';
						else if(recvPlaceJettonFail.cbFailType == 7)
							str = '下注失败，当前无人坐庄！';
						MsgManager.getInstance().showMessage1(str, null, 0, -50, true,1);
						return true;
					}
					case ConstCMD.SUB_S_CANCEL_BANKER:			    			//取消申请
					{
						var recvCancelBanker:CMD_S_CancelBanker = CMD_S_CancelBanker._readBuffer(pBuffer);
						ApplyBanker(recvCancelBanker.wApplyUser,false);
						
						if(recvCancelBanker.wApplyUser == _cowModel.m_User.GetMeChairID()) 
						{ 
							_cowModel.m_cbApplyBanker = false; 
							
							theApplyBanker.source = CCBattleSkinClass.land_apply;
							theApplyBanker.enabled = true;
						}
						
						setStatus(4);
						//	return CancelBanker_Handler(recvCancelBanker);
						return true;
					}
						
					case ConstCMD.SUB_S_AMDIN_COMMAND:	   						//管理员命令
					{
						trace('OnTcpGameEvent:SUB_S_AMDIN_COMMAND:→管理员命令');
						return true;
					}
					case ConstCMD.SUB_S_OUTPLAYERRESON:
					{
						var outReson:CMD_S_OutPlayerReson = CMD_S_OutPlayerReson._readBuffer(pBuffer);
						if(outReson.cbReson == 1)
							MsgManager.getInstance().showMessage1('您的金币不足，请取金币！',null,0,-50,false,1);
						return true;
					}	
				}
				return false;
			}
			/**
			 * 时间处理
			 **/
			override protected function OnGameTimerEvent(pTimer : tagServerTimer) : Boolean
			{
				if(pTimer == null) return false;
				var wMeChairID : uint = _cowModel.m_User.GetMeChairID();
				var bShow : Boolean = pTimer.bTimerType == enTimeType.TT_SHOW;
				var i : uint = 0;
				try
				{
					switch(pTimer.bTimerKind)
					{
						case ConstCMD.TK_FREE:		//空闲
						{
							Controller.dispatchEvent(GameEvent.GAME_LEAVE_ENABLE,1);
							setTheStatus(1);
							setStatus(1);
							StartClock(pTimer.lTimer);
							theCardView.ClearCard();
							for(i = 1 ; i <= 4; i++)
							{
								this['area_'+ i].ClearTableChip();
								this['score_'+i].Hide();
								
								this['gparea_'+i].visible 	= false;
								this['scorearea_'+i].text	= '';
							}
							
							setChipClickHandler(false);
							setAreaAddEnable(false);
							setChipAddEnable(false);
							this.removeEventListener(MouseEvent.RIGHT_CLICK, rightClickHandler);
							
							return true;
						}
						case ConstCMD.TK_JETTON:	//下注
						{
							Controller.dispatchEvent(GameEvent.GAME_LEAVE_ENABLE,0);
							theCardView.ClearCard();
							for(i = 1 ; i <= 4; i++)
							{
								this['area_'+ i].ClearTableChip();
								this['score_'+i].Hide();
								
								this['gparea_'+i].visible 	= false;
								this['scorearea_'+i].text	= '';
							}
							
							_userAreaScore = Memory._newArrayAndSetValue(5, 0);
							_allUserAreaScore = Memory._newArrayAndSetValue(5, 0);
							
							if(_cowModel.m_wBankerID == _cowModel.m_User.GetMeChairID())
							{
								setChipClickHandler(false);
								setAreaAddEnable(false);
								setChipAddEnable(false);
								this.removeEventListener(MouseEvent.RIGHT_CLICK, rightClickHandler);
							}
							else
							{
								setChipClickHandler(true);
								setAreaAddEnable(true);
								setChipAddEnable(true);
								this.addEventListener(MouseEvent.RIGHT_CLICK, rightClickHandler);
							}
							
							setTheStatus(2);
							setStatus(2);
							StartClock(pTimer.lTimer);
//							playSoundEffect(TConst.INVALID_CHAIR,'lingsheng');
							return true;
						}
						case ConstCMD.TK_OPEN:		//开牌
						{
							setChipClickHandler(false);
							setAreaAddEnable(false);
							setChipAddEnable(false);
							this.removeEventListener(MouseEvent.RIGHT_CLICK, rightClickHandler);
							setTheStatus(3);
							setStatus(3);
							StartClock(pTimer.lTimer);
							Controller.dispatchEvent(GameEvent.GAME_LEAVE_ENABLE,0);
							return true;
						}
					}
				}
				catch(e:Error) 
				{
					throw new Error('Land OnGameTimerEvent' + e);
				}
				return false;
			}
			
			
			
			private function setAreaAddEnable(enable:Boolean):void
			{
				_userAreaScore = Memory._newArrayAndSetValue(5, 0);
				_allUserAreaScore = Memory._newArrayAndSetValue(5, 0);
				
				
				var btn:AreaButton;
				for(var i:int=1; i<=4; i++)
				{
					btn = this['area_' + i];
					
					btn.setMouseEnabled(enable);
					
					if(enable)
					{
						btn.addEventListener(MouseEvent.CLICK, chiparea_clickHandler);
						btn.addEventListener(MouseEvent.ROLL_OUT, chiparea_rollOutHandler);
					}
					else
					{
						btn.removeEventListener(MouseEvent.CLICK, chiparea_clickHandler);
						btn.removeEventListener(MouseEvent.ROLL_OUT, chiparea_rollOutHandler);
					}
				}
				if(enable)
				{
					lab_topTip.text = '您可以开始投注了';
					this.addEventListener(MouseEvent.MOUSE_MOVE, chip_mouseMoveHandler);
				}
				else
				{
					lab_topTip.text = '';
					this.removeEventListener(MouseEvent.MOUSE_MOVE, chip_mouseMoveHandler);
				}
				destroyCursor();
			}
			
			private function chiparea_rollOutHandler(e:MouseEvent):void
			{
				if(_cowModel.m_ChipIndex == -1)	return;
				
				var num:Number= parseFloat(theUserView.GoldTxt.text);
				var totalAdd:int = TScore.toFloatEx(_userAreaScore[0] + _userAreaScore[1] + _userAreaScore[2] + _userAreaScore[3]);
				for(var i:int=_chipAry.length-1; i>=0; i--)
				{
					this['AddScore_' + i].enabled = true;
					if( (num-totalAdd*9) < _chipAry[i]*10 )
					{
						this['AddScore_' + i].enabled = false;
					}
				}
				
			}
			
			
			private function rightClickHandler(evt:MouseEvent):void
			{
				destroyCursor();
				setChipAddEnable(true);
			}
			private function setChipAddEnable(enable:Boolean):void
			{
				var btn:GameMCButton;
				for(var i:int=0; i<7; i++)
				{
					btn = this['AddScore_' + i];
					btn.visible = true;
					if(enable)
						btn.addEventListener(MouseEvent.CLICK, chip_clickHandler);
					else
						btn.removeEventListener(MouseEvent.CLICK, chip_clickHandler);
				}
			}
			private function chip_clickHandler(e:MouseEvent):void
			{
				var str:String = e.currentTarget.id;
				var index:int = parseInt(str.charAt(str.length - 1));
				setCurChipButton(index);
			}
			private function setCurChipButton(index:int):void
			{
				for(var i:int=0; i<7; i++)
				{
					if(i==index)
						this['AddScore_' + i].visible = false;
					else
						this['AddScore_' + i].visible = true;
				}
				initChipCursor(index);
			}
			private function initChipCursor(index:int):void
			{
				if(index == -1 || index > 6)	return;
				_cowModel.m_ChipIndex = index;
				cursorManager.setCursor( CCBattleSkinClass.getChipClass(_cowModel.m_ChipIndex), CursorManagerPriority.HIGH , -23, -18);
				Mouse.hide();
			}
			private function setChipClickHandler(enable : Boolean) : void
			{
				var btn:GameMCButton;
				for(var i:int=0; i<7; i++)
				{
					btn = this['AddScore_' + i];
					btn.enabled = enable;
				}
			}
			private function chip_mouseMoveHandler(e:MouseEvent):void
			{
				if(_cowModel.m_ChipIndex != -1)
				{
					var ary:Array = getObjectsUnderPoint(new Point(mouseX, mouseY));
					if(ary.indexOf(gp_bg) != -1)
					{
						cursorManager.setCursor( CCBattleSkinClass.getChipClass(_cowModel.m_ChipIndex), CursorManagerPriority.HIGH , -23, -18);
					}
					else
					{
						cursorManager.removeAllCursors();
					}
				}
			}
			private function destroyCursor() : void
			{
				cursorManager.removeAllCursors();
				_cowModel.m_ChipIndex = -1;
			}
			private function chiparea_clickHandler(e:MouseEvent):void
			{
				if(_cowModel.m_ChipIndex == -1)
				{
					TweenMax.fromTo(score_noselect, 2, {alpha:1}, {alpha:0});
					return;
				}
				if(_cowModel.m_wBankerID==TConst.INVALID_CHAIR && _cowModel.m_bEnableSysBanker==0) 
				{
					Controller.dispatchEvent('WAINING_TEXT',1,"当前无人坐庄!");
					return;
				}
				var str:String = e.currentTarget.id;
				var cAreaScore : Number = _cowModel.currentAreaLimit[uint(str.split('_')[1])];
				var cChipScpre : Number = _cowModel.m_wlChipScore[_cowModel.m_ChipIndex];
				if( cAreaScore - cChipScpre < 0)return;
				var cmd:CMD_C_PlaceJetton = new CMD_C_PlaceJetton();
				cmd.cbJettonArea = uint(str.split('_')[1]);
				cmd.lJettonScore = _cowModel.m_ChipIndex;
				_cowModel.m_Tcp.SendData(GameCmd.MDM_GF_GAME,ConstCMD.SUB_C_PLACE_JETTON,cmd.toByteArry(),cmd.size);
			}
			public function onDestroyAllDos():void
			{
				StopClock();
				cursorManager.removeAllCursors();
				
				if(_gameRecord)
				{
					_gameRecord.length = 0;
					_gameRecord = null;
				}
				
				
				Controller.removeEventListener('UPDATE_HISTORY',onUpdateHistory);
				
				tryplay.visible = false;
				
				_cowModel = null;
				
				ludan_index = 0;
				hisIndex = 0;
			}
			/**
			 * 游戏结束 开始发牌
			 **/
			private function GameEndHandler(recvGameEnd:CMD_S_GameEnd):Boolean
			{
				//骰子点数
				//				Dice_0.show(recvGameEnd.m_wSiceCount[0]);
				//				Dice_1.show(recvGameEnd.m_wSiceCount[1]);
				//_cowModel.m_wDiceNumber = recvGameEnd.m_wSiceCount[0] + recvGameEnd.m_wSiceCount[1];
				_cowModel.m_wDiceNumber = 1;
				_cowModel.m_lastGameEnd = recvGameEnd;
				
				var new_gold : Number;
				if(StaticVars.isTryPlayed)
				{
					new_gold = StaticVars.tryPlayScore+_cowModel.m_lastGameEnd.lUserScore;
					StaticVars.tryPlayScore += _cowModel.m_lastGameEnd.lUserScore;
				}
				else
				{
					new_gold = _cowModel.m_User.GetSelfData().UserScoreInfo.lScore + _cowModel.m_lastGameEnd.lUserScore;
					if(new_gold < 0)	new_gold = 0;
					
					Controller.dispatchEvent(GameEvent.USER_GAME_SCORE,0,_cowModel.m_User.selfID,new_gold);
				}
				if(new_gold < 0)	new_gold = 0;
				_cowModel.m_User.GetSelfData().UserScoreInfo.lScore = new_gold;
				//				theUserView.EndShowScore(new_gold);
				TweenMax.delayedCall(18, theUserView.EndShowScore, [new_gold] );
				
				_cowModel.m_wBankerScore = recvGameEnd.lBankerTotallScore;										//庄家成绩
				_cowModel.m_wCbBankerTime = recvGameEnd.cbBankerTime;											//庄家局数
				
				
				//----------------------------结算-------------------------------
				_cowModel.m_wJieSuanArray[0] = recvGameEnd.lUserScore;								//玩家赢的金币
				_cowModel.m_wJieSuanArray[1] = recvGameEnd.lUserReturnScore;						//玩家返还的金币
				_cowModel.m_wJieSuanArray[2] = recvGameEnd.lBankerScore;							//庄家赢的金币
				_cowModel.m_wUserGold	 	 =  recvGameEnd.m_cbUserScore	 						//自己金币
				_cowModel.m_wUserScore 		 +=	_cowModel.m_wJieSuanArray[0];						//更新自己成绩
				//_cowModel.m_lPlayerScore += _cowModel.m_lastGameEnd.lUserScore;
				
				//				theUserView.InitInfo();
				
				_cowModel.m_lUserAreaWinScore = recvGameEnd.lUserAreaWinScore;
				
				_cowModel.lAreaWinner 		 = recvGameEnd.cbAreaWinner;							//庄家输赢(1庄赢，2玩家赢)
				TweenMax.delayedCall(2,theCardView.InitCardList,[recvGameEnd.cbTableCardArray,recvGameEnd.cbSortCardArray]);
				_cowModel.m_wCBCardOx = recvGameEnd.m_cbCardOx;											//结束牌型
				TweenMax.delayedCall(18,showGameEnd);
				//				showGameEnd();
				return true;
			}
			
			
			
			private var _gameRecord:Array;
			
			private function showGameEnd():void
			{
				if(_gameRecord == null)
					_gameRecord = [];
				
				var str:String = '牌局:' + StaticVars.szGameNum+'\n'+'庄家:' + theUserView.ZTimeTxt.text+'\n'+'本局输赢:' + TScore.toStringEx(_cowModel.m_wJieSuanArray[0])+'\n\n';
				_gameRecord.push(str);
				gameEnd.text = "";
				while(_gameRecord.length > 20)
					_gameRecord.shift();
				gameEnd.text = _gameRecord.join('');
				
				
				//				gameEnd.text	+= '牌局:' + StaticVars.szGameNum+'\n';
				//				gameEnd.text	+= '庄家:' + theUserView.ZTimeTxt.text+'\n';
				//				gameEnd.text	+= '本局输赢:' + TScore.toStringEx(_cowModel.m_wJieSuanArray[0])+'\n\n';
				
				gameEnd.validateNow();
				gameEnd.scroller.verticalScrollBar.value = gameEnd.scroller.verticalScrollBar.maximum;
				gameEnd.validateNow();
				gameEnd.scroller.verticalScrollBar.value = gameEnd.scroller.verticalScrollBar.maximum;
			}
			
			
			
			/**
			 * 用户加注操作 S→C
			 **/
			private function UserAddScoreHandler(recvPlaceJetton:CMD_S_PlaceJetton):Boolean
			{
				var btn : AreaButton = this['area_'+recvPlaceJetton.cbJettonArea] as AreaButton;
				btn.AddChip(recvPlaceJetton.cbJettonArea,recvPlaceJetton.lJettonScore);
				var areaScore : TotalBetChips = this['score_'+recvPlaceJetton.cbJettonArea] as TotalBetChips;
				areaScore.betScore = TScore.toFloatEx(_cowModel.m_wlChipScore[recvPlaceJetton.lJettonScore]);
				var num : Number;
				var i:int;
				if(recvPlaceJetton.wChairID == _cowModel.m_User.GetMeChairID())
				{
					_userAreaScore[recvPlaceJetton.cbJettonArea] += _cowModel.m_wlChipScore[recvPlaceJetton.lJettonScore];
					
					this['gparea_' + recvPlaceJetton.cbJettonArea].visible = true;
					
					this['scorearea_' + recvPlaceJetton.cbJettonArea].text = TScore.toFloatEx(_userAreaScore[recvPlaceJetton.cbJettonArea]).toFixed(0);
					//					areaScore.setUserAreaScore( TScore.toFloatEx(_userAreaScore[recvPlaceJetton.cbJettonArea]).toFixed(0) );
					
					//					if(StaticVars.isTryPlayed)
					//						num = Number(theUserView.GoldTxt.text) - TScore.toFloatEx(StaticVars.tryPlayScore);
					//					else
					//						num = Number(theUserView.GoldTxt.text) - TScore.toFloatEx(_cowModel.m_wlChipScore[recvPlaceJetton.lJettonScore]);
					//					if(num < 0)	num = 0;
					
					num = Number(theUserView.GoldTxt.text) - TScore.toFloatEx(_cowModel.m_wlChipScore[recvPlaceJetton.lJettonScore]);
					theUserView.GoldTxt.text = num.toFixed(2);
					
					var totalAdd:int = TScore.toFloatEx(_userAreaScore[0] + _userAreaScore[1] + _userAreaScore[2] + _userAreaScore[3]);
					for(i=_chipAry.length-1; i>=0; i--)
					{
						if( (num-totalAdd*9) < _chipAry[i]*10 )
						{
							this['AddScore_' + i].enabled = false;
						}
						else
						{
							if(_cowModel.m_ChipIndex >= i)
							{
								destroyCursor();
								setCurChipButton(i);
								break;
							}
							
						}
					}
					if(recvPlaceJetton.lJettonScore == 4) {
						playSoundEffect(TConst.INVALID_CHAIR,'chouma1');
					}else if(recvPlaceJetton.lJettonScore == 5)
					{
						playSoundEffect(TConst.INVALID_CHAIR,'chouma2');
					}else if(recvPlaceJetton.lJettonScore == 6)
					{
						playSoundEffect(TConst.INVALID_CHAIR,'chouma3');
					}else
					{
						playSoundEffect(TConst.INVALID_CHAIR,'chouma');
					}
				}else{
					for(i = 1;i<=4;i++)
					{
						if(this['scorearea_'+i].text	== '')
						{
							this['gparea_'+i].visible = true;
							this['scorearea_'+i].text = '0';
						}
					}
//					playSoundEffect(TConst.INVALID_CHAIR,'chouma');
					if(recvPlaceJetton.lJettonScore == 4) {
						playSoundEffect(TConst.INVALID_CHAIR,'chouma1');
					}else if(recvPlaceJetton.lJettonScore == 5)
					{
						playSoundEffect(TConst.INVALID_CHAIR,'chouma2');
					}else if(recvPlaceJetton.lJettonScore == 6)
					{
						playSoundEffect(TConst.INVALID_CHAIR,'chouma3');
					}else
					{
						playSoundEffect(TConst.INVALID_CHAIR,'chouma');
					}
				}
				
				var score:Number = _userAreaLimitAry[recvPlaceJetton.cbJettonArea - 1];
				_userAreaLimitAry[recvPlaceJetton.cbJettonArea - 1] = score - _cowModel.m_wlChipScore[recvPlaceJetton.lJettonScore];
				this['areaLimit_' + (recvPlaceJetton.cbJettonArea - 1)].text = TScore.toStringEx( _userAreaLimitAry[recvPlaceJetton.cbJettonArea - 1] );
				if( _userAreaLimitAry[recvPlaceJetton.cbJettonArea - 1] < 0)
					this['areaLimit_' + (recvPlaceJetton.cbJettonArea - 1)].text = '0';
				
				
				if(recvPlaceJetton.wChairID == _cowModel.m_User.GetMeChairID())
				{
					num = parseFloat(theUserView.GoldTxt.text);
					var area:Number = parseFloat( this['areaLimit_' + (recvPlaceJetton.cbJettonArea - 1)].text );
					if( num > area*10)
					{
						for( i=_chipAry.length-1; i>=0; i--)
						{
							if( area < _chipAry[i])
							{
								this['AddScore_' + i].enabled = false;
							}
							else
							{
								if(_cowModel.m_ChipIndex >= i)
								{
									destroyCursor();
									setCurChipButton(i);
									break;
								}
							}
						}
					}
				}
				
				
				_cowModel.currentAreaLimit[recvPlaceJetton.cbJettonArea - 1] -= _cowModel.m_wlChipScore[recvPlaceJetton.lJettonScore];
				//				this['areaLimit_' + (recvPlaceJetton.cbJettonArea - 1)].text = TScore.toStringEx(_cowModel.currentAreaLimit[recvPlaceJetton.cbJettonArea - 1]);
				
				var userInfo : tagUserInfoHead = _cowModel.m_User.GetUserByChair(recvPlaceJetton.wChairID);
				if(userInfo != null)
				{
					if( userInfo.cbGender > 2)
					{
						//机器人下注
					}
					else
					{
						if(_allUserAreaScore==null)	_allUserAreaScore = Memory._newArrayAndSetValue(5, 0);
						_allUserAreaScore[recvPlaceJetton.cbJettonArea] += TScore.toFloatEx(_cowModel.m_wlChipScore[recvPlaceJetton.lJettonScore]);
					}
				}
				
				
				return true;
			}
			private var _clock : DisplayObject;
			
			
			private var recordBg:Vector.<Image>;
			private var recordLabel:Vector.<Image>;
			
			protected function gamebasemodule1_creationCompleteHandler(event:FlexEvent):void
			{
				_historyVec = [];
				_applyBanker = [];
				
				recordBg = new Vector.<Image>;
				recordLabel = new Vector.<Image>;
				
				if(!ui_clock.numChildren){
					_clock = CCBattleSkinClass.GetClock();
					_clock["Status_MC"].gotoAndStop(1);
					ui_clock.addChild(_clock);
				}
				
				initHistory();
				
				
				Controller.addEventListener('UPDATE_HISTORY',onUpdateHistory);
				
					Controller.addEventListener('WAINING_TEXT',onWarningEvent);
				
				//				track.addEventListener(MouseEvent.MOUSE_DOWN, onMouseDownHandler);
			}
			
			private function onWarningEvent(e : TEvent) : void
			{
				MsgManager.getInstance().showMessage1( String(e.nWParam) ,null,0,-50,false,1);
				trace(String(e.nWParam));
			}
			
			private function initHistory():void
			{
				for(var i:int=0; i<12; i++)
				{
					var bg:Image = new Image;
					bg.source = CCBattleSkinClass.record_bg;
					bg.x = i*21 - 1;
					recordBg.push(bg);
					recordGP.addElement(bg);
				}
			}
			
			
			//			private function onMouseDownHandler(evt:MouseEvent):void
			//			{
			//				this.addEventListener(MouseEvent.MOUSE_UP, onMouseUpHandler);
			//				this.addEventListener(MouseEvent.MOUSE_MOVE, onMouseMoveHandler);
			//				
			//				track.startDrag(false, new Rectangle(0, 0, 219, 0));
			//				
			//				//				startX = track.x;
			//			}
			//			private function onMouseMoveHandler(evt:MouseEvent):void
			//			{
			//				if(!evt.buttonDown)	return;
			//				recordGP.x = 0 - (recordGP.width-historyMask.width)*(track.x)/220;
			//				
			//			}
			//			private function onMouseUpHandler(evt:MouseEvent):void
			//			{
			////				this.removeEventListener(MouseEvent.MOUSE_UP, onMouseUpHandler);
			//				this.removeEventListener(MouseEvent.MOUSE_MOVE, onMouseMoveHandler);
			//				
			//				track.stopDrag();
			//			}
			private var gameCount:int = 0;
			private var hisIndex:int = 0;
			private function onUpdateHistory(e : TEvent = null) : void
			{
				var _historyMode : HistoryModel = HistoryModel._getInstance();
				var start : int = _historyMode.HistoryCount - 40;
				start = start>0?start:0;
				gameCount = 0;
				var i:int;
				
				tWinCount = 0;
				dWinCount = 0;
				xWinCount = 0;
				hWinCount = 0;
				
				for(var j:int=start; j<_historyMode.HistoryCount; j++)
				{
					
					
					var Record : tagServerGameRecord = _historyMode.GetHistoryByIndex(j);
					
					if(gameCount >= recordBg.length)
					{
						var bg:Image = new Image;
						bg.source = CCBattleSkinClass.record_bg;
						bg.x = gameCount*21 - 2;
						recordBg.push(bg);
						recordGP.addElement(bg);
					}
					
					var labelNum:int = recordLabel.length>>2;
					if(gameCount >= labelNum)
					{
						var tWin:int=0, dWin:int=0, xWin:int=0, hWin:int=0;
						for(i = 0 ; i < 5; i++)
						{
							if(i > 0)
							{
								var nImage : Image = new Image;
								_historyVec.push( nImage );
								recordLabel.push( nImage );
								nImage.x = gameCount * 21 + 1.5;
								nImage.y = i*20 - 20 + 5 ; 
								recordGP.addElement(nImage);
							}
						}
					}
					
					for(i = 1 ; i < 5; i++)
					{
						if(Record.m_bAreaAide[i] > 1)			//玩家赢
						{
							recordLabel[gameCount*4+i-1].source = CCBattleSkinClass.getUserSelect(1);
							UsersWinnerCount_Handler(i);
						}else 
						{
							recordLabel[gameCount*4+i-1].source = CCBattleSkinClass.getUserSelect(2);
						}
					}
					
					
					gameCount++;
					
					
				}
				
				
				if(gameCount > 11)
					recordGP.width = gameCount*21;
				
				//				track.x = 220;
				recordGP.x = 0 - (recordGP.width-historyMask.width);
				hisIndex = recordGP.width-historyMask.width;
				ludan_index = 0;
			}
			private function UsersWinnerCount_Handler(wCardID : uint) : void
			{
				switch(wCardID)
				{
					case 1:{tWinCount++;break;}
					case 2:{dWinCount++;break;}
					case 3:{xWinCount++;break;}
					case 4:{hWinCount++;break;}
				}
			}
			protected function onApplyBanker(event:MouseEvent):void
			{
				if(_cowModel.m_User.GetSelfData().UserScoreInfo.lScore < _cowModel.m_lApplyBankerCondition) { return; }
				//_cowModel.m_cbApplyBanker = !_cowModel.m_cbApplyBanker;
				if(!_cowModel.m_cbApplyBanker) 
				{
					//					theApplyBanker.label = '取消上庄';
					//					theApplyBanker.source = CCBattleSkinClass.land_cancel;
					_cowModel.m_Tcp.SendCmd(GameCmd.MDM_GF_GAME,ConstCMD.SUB_C_APPLY_BANKER);
				}
				else 
				{
					//					theApplyBanker.label = '申请上庄';
					//					theApplyBanker.source = CCBattleSkinClass.land_apply;
					_cowModel.m_Tcp.SendCmd(GameCmd.MDM_GF_GAME,ConstCMD.SUB_C_CANCEL_BANKER);
				}
				
				theApplyBanker.enabled = false;
			}
			public function ApplyBanker(wChairID : uint,bApplay : Boolean = true) : void
			{
				if(bApplay) {
					_applyBanker.push(wChairID);
				}else {
					var index : int =_applyBanker.indexOf(wChairID);
					if(index != -1) {
						_applyBanker.splice(index,1);
					}
				}
				for(var i : uint = 0;i<3;i++)
				{
					this['applay_' + i].text ='';
					if(i<_applyBanker.length)
					{
						var userInfo : tagUserInfoHead = _cowModel.m_User.GetUserByChair(_applyBanker[i]);
						if(userInfo != null) 
						{
							//this['applay_' + i].text = (i+1) + '         ' + IDConvert.Id2View(userInfo.dwUserID);
							//							this['applay_' + i].text = (i+1) + '        ' + '游戏玩家';
							this['applay_' + i].text =userInfo.dwUserID.toString();
							if(StaticVars.isTryPlayed)
								this['gold_' + i].text = '******';
							else
								this['gold_' + i].text =TScore.toFloatEx(userInfo.UserScoreInfo.lScore).toFixed(2);
							//							if(userInfo.dwUserID == _cowModel.m_User.selfID)
							//								this['applay_' + i].text =userInfo.dwUserID.toString();
							//							else
							//								this['applay_' + i].text =userInfo.dwUserID.toString();
						}
						else
						{
							this['applay_' + i].text ='';
							this['gold_' + i].text = '';
						}
					}
				}
			}
			
			
			
			
			public function setStatus(val : uint) : void
			{
				switch(val)
				{
					case 1:				//空闲
					{
						if( _cowModel.m_cbApplyBanker )
						{
							theApplyBanker.source = CCBattleSkinClass.land_cancel;
							theApplyBanker.enabled = true;
						}
						else 
						{
							theApplyBanker.source = CCBattleSkinClass.land_apply;
							theApplyBanker.enabled = true;
						}
						
						
						//						if(StaticVars.isTryPlayed)
						//						{
						//							if(_cowModel.m_lApplyBankerCondition > StaticVars.tryPlayScore) 
						//								theApplyBanker.enabled = false;
						//						}
						//						else
						//						{
						if(_cowModel.m_lApplyBankerCondition > _cowModel.m_User.GetSelfData().UserScoreInfo.lScore) 
							theApplyBanker.enabled = false;
						//						}
						
						break;
					}
					case 2:
					case 3:				//下注，开牌
					{
						if( _cowModel.m_cbApplyBanker )
						{
							theApplyBanker.source = CCBattleSkinClass.land_cancel;
							theApplyBanker.enabled = false;
						}
						else 
						{
							theApplyBanker.enabled = true;
							theApplyBanker.source = CCBattleSkinClass.land_apply;
						}
						
						if(_cowModel.m_lApplyBankerCondition > _cowModel.m_User.GetSelfData().UserScoreInfo.lScore) 
							theApplyBanker.enabled = false;
						
						break;
					}
					case 4:			//取消上庄，切换上庄
					{
						if( _cowModel.m_cbApplyBanker )
						{
							theApplyBanker.source = CCBattleSkinClass.land_cancel;
							theApplyBanker.enabled = true;
						}
						else 
						{
							theApplyBanker.source = CCBattleSkinClass.land_apply;
							theApplyBanker.enabled = true;
						}
						
						if(_cowModel.m_lApplyBankerCondition > _cowModel.m_User.GetSelfData().UserScoreInfo.lScore) 
							theApplyBanker.enabled = false;
						
						
						break;
					}
				}
			}
			
			
			public function ShowLunHuan() : void
			{
				if(_applyBanker.length > 0) {
					_applyBanker.shift();
					this['applay_0'].text = '';
					var userInfo : tagUserInfoHead;
					for(var i : uint = 0;i<3;i++)
					{
						if(i<_applyBanker.length) 
						{
							userInfo =  _cowModel.m_User.GetUserByChair(_applyBanker[i]);
							//							this['applay_' + i].text = (i+1) + '         ' + IDConvert.Id2View(userInfo.dwUserID);
							if(userInfo)
							{
								this['applay_' + i].text = userInfo.dwUserID.toString();
								if(StaticVars.isTryPlayed)
									this['gold_' + i].text = '******';
								else
									this['gold_' + i].text =TScore.toFloatEx(userInfo.UserScoreInfo.lScore).toFixed(2);
								//								if(userInfo.dwUserID == _cowModel.m_User.selfID)
								//									this['applay_' + i].text = UserModel._getInstance().selfInfo.szAccount;
								//								else
								//									this['applay_' + i].text = '游戏玩家';
							}
							//							this['applay_' + i].text = (i+1) + '        ' + '游戏玩家';
						}
						else 
						{
							this['applay_' + i].text = '';
							this['gold_' + i].text = '';
						}
					}
				}
			}
			private function setTheStatus(value:int):void
			{
				if(_clock==null) return;
				_clock["Status_MC"].gotoAndStop(value);
			}
			private var _timer : Timer;
			private var _bWarning : Boolean;
			public function StartClock(time:Number,bWarning : Boolean = false) : void
			{
				var repeat : uint = time / 1000;
				StopClock();
				_bWarning = bWarning;
				//				theTime.text = repeat>9?repeat.toString():('0'+repeat);
				theTime.text = repeat.toString();
				_timer = new Timer(1000,repeat);
				_timer.addEventListener(TimerEvent.TIMER,onTimerEvent);
				_timer.start();
			}
			public function StopClock() : void
			{
				if(_timer) {
					_timer.stop();
					_timer.removeEventListener(TimerEvent.TIMER,onTimerEvent);
					_timer = null;
					_bWarning = false;
				}
				theTime.text = '0';
			}
			private function onTimerEvent(e : TimerEvent) : void
			{
				var time : int = _timer.repeatCount - _timer.currentCount;
				if(time <= 0) {
					StopClock(); 
					return;
				}
				theTime.text = time.toString();
				if(Number(theTime.text) <= 5)
				{
					playSoundEffect(TConst.INVALID_CHAIR,'time');
				}
			}
			public function playSoundEffect(wChairID : uint,action : String, type : int=-1,value : int=-1,rand : int = -1):void
			{
				if(_cowModel == null)	return;
				try
				{
					_cowModel.m_Sound.PlayEffect(wChairID, action, type, value, rand);
				}
				catch(e:Error){};
			}
			
			
			private function showTheTip():void
			{
				if(showTip)
				{
					showTip			= false;
					gp_tip.visible 	= true;
					tip1.text	= TScore.toStringEx(_tipAreaLimitScore);
					tip2.text	= TScore.toStringEx(_tipUserMaxScore);
					tip3.text	= TScore.toStringEx(_tipApplyBankerCondition);
					
					TweenMax.delayedCall(4, delayCloseTip);
					
					if(_gameRecord == null)
						_gameRecord = [];
					
					var str:String = '本游戏桌区域限制：' + tip1.text+'\n'+'玩家投注限制：' + tip2.text+'\n'+'上庄条件：' + tip3.text+'\n\n';
					_gameRecord.push(str);
					gameEnd.text = _gameRecord.join('');
				}
			}
			
			
			private function delayCloseTip():void
			{
				if(gp_tip && gp_tip.visible)
					gp_tip.visible = false;
			}
			///////////////////////点击路单
			protected function theLudanBtn_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				
			}
			private var ludan_index:uint = 0;
			private function onClickButton(e:MouseEvent):void
			{
				switch(e.currentTarget.id)
				{
					case "btn_left":
						if(ludan_index<hisIndex)
						{
							recordGP.x+=21.05;
							ludan_index += 21;
						}
						break;
					case "btn_right":
						if(ludan_index>0)
						{
							recordGP.x-=21.05;
							ludan_index-=21;
						}
						break;
				}
			}
			
			public function changeBackground(val:int):void
			{
				if(val == 4)
					_bg.source = CCBattleSkinClass.ccb_bg4;
				else if(val == 3)
					_bg.source = CCBattleSkinClass.ccb_bg3;
				else if(val == 2)
					_bg.source = CCBattleSkinClass.ccb_bg2;
				else if(val == 1)
					_bg.source = CCBattleSkinClass.ccb_bg1;
			}
			
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:GlowFilter id="gf01" color="0x000000" strength="10" blurX="2" blurY="2"/>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:Group width="860" height="220" horizontalCenter="-50" verticalCenter="-30" id="gp_bg" mouseChildren="false">
		<s:Rect x="0" y="0" width="100%" height="100%">
			<s:fill>
				<s:SolidColor color="0x000000" alpha="0"/>
			</s:fill>
		</s:Rect>
	</s:Group>
	
	<!--
	<s:Label bottom="170" horizontalCenter="0" width="470" color="#999900" fontFamily="微软雅黑" fontSize="14"
	text="游戏大小：无牛＜牛1＜牛2＜牛3＜牛4＜牛5＜牛6＜牛7＜牛8＜牛9＜牛牛 游戏倍率：1 倍＜1 倍＜2倍＜3倍＜4倍＜5倍＜6倍＜7倍＜8倍＜9倍＜10倍"/>
	-->
	<s:Image source="{CCBattleSkinClass.ccb_bg2}" horizontalCenter="0" verticalCenter="14" id="_bg" visible="true"/>
	<s:Image source="{CCBattleSkinClass.ccb_bg}" horizontalCenter="0" verticalCenter="14"/>
	<!--<s:Image source="{CCBattleSkinClass.ccb_bgnn}" horizontalCenter="1" verticalCenter="160"/>-->
	<!--<s:Image source="{CCBattleSkinClass.view_top}"  top="0" horizontalCenter="0"/>-->
	<s:Image source="{CCBattleSkinClass.view_bottom}" bottom="-30" left="10"/>
	<!--<s:Image source="{CCBattleSkinClass.chip_bg}" bottom="120" horizontalCenter="110"/>-->
	
	<s:Image source="{CCBattleSkinClass.tryplay}" horizontalCenter="-119" verticalCenter="-160" id="tryplay" visible="false"/>
	
	
	<s:Label filters="{[gf01]}" fontFamily="微软雅黑" fontSize="14" color="0xffffff"  id="lab_topTip"
			 top="144" fontWeight="bold" horizontalCenter="-5" textAlign="center" width="200" visible="false"/>
	
	<s:Group bottom="130" horizontalCenter="110" width="54" height="54" id="gp_clock" visible="true"  depth="500">
		<mx:UIComponent x="0" y="0" id="ui_clock"/>
		<s:Label filters="{[gf01]}" x="0" y="22" color="#FFFF00" fontSize="18" fontWeight="bold" text="20" id="theTime" width="54" textAlign="center"/>
	</s:Group>
	
	<s:Label filters="{[gf01]}" horizontalCenter="175" bottom="48" color="#f0c05c" id="tTxt" text="{tWinCount}"/>
	<s:Label filters="{[gf01]}" horizontalCenter="175" bottom="28" color="#f0c05c" id="dTxt" text="{dWinCount}"/>
	<s:Label filters="{[gf01]}" horizontalCenter="175" bottom="6" color="#f0c05c" id="xTxt" text="{xWinCount}"/>
	<s:Label filters="{[gf01]}" horizontalCenter="175" bottom="-14" color="#f0c05c" id="hTxt" text="{hWinCount}"/>
	
	<com:GameMCButton id="btn_left" buttonMode="true" targetClass ="{CCBattleSkinClass.btn_left}" bottom="-10" horizontalCenter="230" click="onClickButton(event)"/>
	<com:GameMCButton id="btn_right" buttonMode="true" targetClass ="{CCBattleSkinClass.btn_right}" bottom="30" horizontalCenter="230" click="onClickButton(event)"/>
	
	<s:Label filters="{[gf01]}" id="areaLimit_0" top="20" horizontalCenter="-380" fontSize="14" color="#f0c05c" />
	<s:Label filters="{[gf01]}" id="areaLimit_1" top="37" horizontalCenter="-380" fontSize="14" color="#f0c05c" />
	<s:Label filters="{[gf01]}" id="areaLimit_2" top="56" horizontalCenter="-380" fontSize="14" color="#f0c05c" />
	<s:Label filters="{[gf01]}" id="areaLimit_3" top="76" horizontalCenter="-380" fontSize="14" color="#f0c05c" />
	
	<cowlord:AreaButton id="area_1" targetClass="{CCBattleSkinClass.DownChipArea}" horizontalCenter="-478" verticalCenter="-88" />
	<view:TotalBetChips id="score_1"  horizontalCenter="-375" verticalCenter="87"/>
	<cowlord:AreaButton id="area_2" targetClass="{CCBattleSkinClass.DownChipArea}" horizontalCenter="-295" verticalCenter="-88" />
	<view:TotalBetChips id="score_2"  horizontalCenter="-190" verticalCenter="87"/>
	<cowlord:AreaButton id="area_3" targetClass="{CCBattleSkinClass.DownChipArea}" horizontalCenter="-105" verticalCenter="-88" />
	<view:TotalBetChips id="score_3"  horizontalCenter="0" verticalCenter="87"/>
	<cowlord:AreaButton id="area_4" targetClass="{CCBattleSkinClass.DownChipArea}" horizontalCenter="80" verticalCenter="-88" />
	<view:TotalBetChips id="score_4"  horizontalCenter="185" verticalCenter="87"/>
	
	
	<s:Group width="160" height="40" mouseEnabled="false" mouseChildren="false" horizontalCenter="-475" verticalCenter="95" id="gparea_1" visible="false"> 
		<!--<s:Image x="0" y="0" source="{CCBattleSkinClass.view_chipTotal}"/>-->
		<s:Label filters="{[gf01]}" fontSize="16" width="160" textAlign="right" y="15" x="0" color="#FFFF33" id="scorearea_1"/>
	</s:Group>
	<s:Group width="160" height="40" mouseEnabled="false" mouseChildren="false" horizontalCenter="-290" verticalCenter="95" id="gparea_2" visible="false">
		<!--<s:Image x="0" y="0" source="{CCBattleSkinClass.view_chipTotal}"/>-->
		<s:Label filters="{[gf01]}" fontSize="16" width="160" textAlign="right" y="15" x="0" color="#FFFF33" id="scorearea_2"/>
	</s:Group>
	<s:Group width="160" height="40" mouseEnabled="false" mouseChildren="false" horizontalCenter="-105" verticalCenter="95" id="gparea_3" visible="false">
		<!--<s:Image x="0" y="0" source="{CCBattleSkinClass.view_chipTotal}"/>-->
		<s:Label filters="{[gf01]}" fontSize="16" width="160" textAlign="right" y="15" x="0" color="#FFFF33" id="scorearea_3"/>
	</s:Group>
	<s:Group width="160" height="40" mouseEnabled="false" mouseChildren="false" horizontalCenter="85" verticalCenter="95" id="gparea_4" visible="false">
		<!--<s:Image x="0" y="0" source="{CCBattleSkinClass.view_chipTotal}"/>-->
		<s:Label filters="{[gf01]}" fontSize="16" width="160" textAlign="right" y="15" x="0" color="#FFFF33" id="scorearea_4"/>
	</s:Group>
	
	
	<!--
	<cowlord:DiceMovie  id="Dice_0" targetClass="{CCBattleSkinClass.Dice}" horizontalCenter="-110" verticalCenter="-260"/>
	<cowlord:DiceMovie  id="Dice_1" targetClass="{CCBattleSkinClass.Dice}" horizontalCenter="-20" verticalCenter="-260"/>
	-->
	<view:ccbUserAir bottom="-34" left="-30" id="theUserView" width="800" height="100%"/>
	<view:CardViewCC id="theCardView"  horizontalCenter="-105" verticalCenter="-20"/>
	<s:Image id="score_noselect" source="{CCBattleSkinClass.chip_noSelect}" bottom="80" horizontalCenter="-208" alpha="0" mouseChildren="false" mouseEnabled="false"/>
	
	
	<s:Group bottom="-12" horizontalCenter="-66" width="420" height="80" id="historyMask">
		<s:Rect x="0" y="0" width="420" height="80">
			<s:fill>
				<s:SolidColor color="0xcccccc"/>
			</s:fill>
		</s:Rect>
	</s:Group>
	<s:Group id="historyGP" bottom="-12" horizontalCenter="-66" width="420" height="80" mask="{historyMask}">
		<s:Group id="recordGP" x="0" y="0" width="420" height="80"/>
	</s:Group>
	<!--<s:Group bottom="10" horizontalCenter="13" width="245" height="15">
	<s:Image source="{CCBattleSkinClass.btn_scroll}" x="0" y="1" buttonMode="true" id="track"/>
	</s:Group>-->
	<!--<s:Image horizontalCenter="110" bottom="80" click="theLudanBtn_clickHandler(event)" id="theLudanBtn" source="{CCBattleSkinClass.btn_ludan}" buttonMode="true"/>-->
	<s:Image horizontalCenter="160" bottom="80" click="onApplyBanker(event)" id="theApplyBanker" source="{CCBattleSkinClass.land_apply}" buttonMode="true"/>
	<s:Label filters="{[gf01]}" top="40" horizontalCenter="150" id="applay_0" color="#f0c05c" fontFamily="微软雅黑" width="150"/>
	<s:Label filters="{[gf01]}" top="57" horizontalCenter="150" id="applay_1" color="#f0c05c" fontFamily="微软雅黑" width="150"/>
	<s:Label filters="{[gf01]}" top="73" horizontalCenter="150" id="applay_2" color="#f0c05c" fontFamily="微软雅黑" width="150"/>
	
	<s:Label filters="{[gf01]}" top="40" horizontalCenter="250" id="gold_0" color="#f0c05c" fontFamily="微软雅黑" width="150"/>
	<s:Label filters="{[gf01]}" top="57" horizontalCenter="250" id="gold_1" color="#f0c05c" fontFamily="微软雅黑" width="150"/>
	<s:Label filters="{[gf01]}" top="73" horizontalCenter="250" id="gold_2" color="#f0c05c" fontFamily="微软雅黑" width="150"/>
	
	<com:GameMCButton id="AddScore_0" buttonMode="true" targetClass ="{CCBattleSkinClass.btn_chip1}" bottom="85" horizontalCenter="-446.5"/>
	<com:GameMCButton id="AddScore_1" buttonMode="true" targetClass ="{CCBattleSkinClass.btn_chip5}" bottom="85" horizontalCenter="-368.5"/>
	<com:GameMCButton id="AddScore_2" buttonMode="true" targetClass ="{CCBattleSkinClass.btn_chip10}" bottom="85" horizontalCenter="-289.5"/>
	<com:GameMCButton id="AddScore_3" buttonMode="true" targetClass ="{CCBattleSkinClass.btn_chip50}" bottom="85" horizontalCenter="-210.5"/>
	<com:GameMCButton id="AddScore_4" buttonMode="true" targetClass ="{CCBattleSkinClass.btn_chip100}" bottom="85" horizontalCenter="-131.5"/>
	<com:GameMCButton id="AddScore_5" buttonMode="true" targetClass ="{CCBattleSkinClass.btn_chip1000}" bottom="85" horizontalCenter="-52.5"/>
	<com:GameMCButton id="AddScore_6" buttonMode="true" targetClass ="{CCBattleSkinClass.btn_chip10000}" bottom="85" horizontalCenter="30.5"/>
	
	
	<s:Group width="413" height="192" horizontalCenter="-110" verticalCenter="-58" fontFamily="微软雅黑" fontSize="14" color="0xFFFFFF" visible="false" id="gp_tip">
		<s:Image source="{SkinClass.showmsg_bg1}" x="0" y="0"/>
		
		<s:Label filters="{[gf01]}" x="27" y="45" text="本游戏桌区域限制："/>
		<s:Label filters="{[gf01]}" x="27" y="65" text="玩家投注限制："/>
		<s:Label filters="{[gf01]}" x="27" y="85" text="上庄条件："/>
		
		<s:Label filters="{[gf01]}" x="157" y="44" fontSize="16" id="tip1" text="12000.00"/>
		<s:Label filters="{[gf01]}" x="127" y="64" fontSize="16" id="tip2" text="300.00"/>
		<s:Label filters="{[gf01]}" x="97" y="84" fontSize="16" id="tip3" text="1000.00"/>
		
		<com:MCButton x="130" y="120" targetClass="{SkinClass.showmsg_sure}" click="delayCloseTip()"/>
	</s:Group>
	<s:TextArea id="gameEnd" width="212" height="270" right="30" bottom="-39" borderVisible="false" 
				editable="false" color="#f4d580" fontSize="15" fontFamily="宋体" filters="{[gf01]}"
				textIndent="0" contentBackgroundAlpha="0" paddingLeft="5" paddingRight="0" 
				verticalScrollPolicy="off" lineHeight="20"
				mouseEnabled="false" selectable="false" />
	
</base:GameBaseModule>
