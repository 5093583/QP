<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 fontFamily="宋体" 
		 width="300" height="83" xmlns:com="com.*">
	<fx:Script>
		<![CDATA[
			import base.SkinClass;
			import base.StaticVars;
			
			import cx.assembly.head.HeadEmbed;
			import cx.client.logon.model.UserModel;
			import cx.ip.IPScannerNew;
			
			import gameAssets.DDZhouHL.DDZhouHLSkinClass;
			
			import games.dzlord.model.DeZhouModel;
			
			import t.cx.air.TScore;
			
			
			
			private var _userid : int;
			private var _time : Timer;
			private var _bitmap : Bitmap;
			
			public function set userID(val : int) : void
			{
				_userid = val;
//				IDTxt.text = val.toString();
				IDTxt.text = UserModel._getInstance().selfInfo.szAccount;
				
				IDTxt.text = '游戏玩家';
				if(_userid == DeZhouModel._getInstance().m_User.selfID)
				{
					SelfTxt.text = TScore.toStringEx(DeZhouModel._getInstance().m_User.GetSelfData().UserScoreInfo.lScore);
					if(StaticVars.isTryPlayed)
						SelfTxt.text = TScore.toStringEx(StaticVars.tryPlayScore);
				}
			}
			public function get userID() : int
			{
				return _userid;
			}
			public function set IP(val : String) : void
			{
				//IPTxt.text = val;
//				var localIP : IPLocation = IPScanner._getInstance().Query(val);
//				IPTxt.text = localIP.country;
				IPTxt.text = IPScannerNew._getInstance().getIpnew(val);
			}
			public function set JinBi(val : Number) : void
			{
				SelfTxt.text = TScore.toStringEx(val);
				if(StaticVars.isTryPlayed)
					SelfTxt.text = TScore.toStringEx(StaticVars.tryPlayScore);
			}
			
			
			public function Offlie(timelen : int) : void
			{
				destroyTime();
				if(timelen > 0)
				{
					_time = new Timer(1000,timelen/1000);
					_time.addEventListener(TimerEvent.TIMER,onOfflieTime);
					_time.start();
					
					setElementIndex(OffLineTxt,this.numChildren-1);
					OffLineTxt.text = '断线' + _time.repeatCount;
				}
			}
			
			public function set Face(index : uint) : void
			{
				if(index == 2)
					head.source = SkinClass.hall_head_female_small;
				else
					head.source = SkinClass.hall_head_male_small;
				
//				if(_bitmap != null)
//				{
//					if(this.contains(_bitmap))
//					{
//						this.removeChild(_bitmap);
//					}
//					_bitmap.bitmapData.dispose();
//					_bitmap = null;
//				}
//				_bitmap = HeadEmbed.EmbedHead(index);
//				if(_bitmap)
//					_bitmap.width = _bitmap.height = 76;
//				if(_bitmap){
//					trace('_bitmap',_bitmap.bitmapData);
//					head.source = _bitmap;
//					head.mask = head_mask;
//				}
			}
			
			private function onOfflieTime(e : TimerEvent) : void
			{
				OffLineTxt.text="断线" + (_time.repeatCount-_time.currentCount).toString();
				if(_time.repeatCount == _time.currentCount) { destroyTime(); }
			}
			private function destroyTime() : void
			{
				if(_time != null)
				{
					_time.reset();
					_time.removeEventListener(TimerEvent.TIMER,onOfflieTime);
					_time = null;
				}
				OffLineTxt.text = '';
			}
			public function Destroy() : void
			{
				//				destroyTime();
				//				if(_bitmap)
				//				{
				//					if(this.contains(_bitmap)) { this.removeChild(_bitmap); }
				//					_bitmap.bitmapData.dispose();
				//					_bitmap = null;
				//				}
				//				this['IDTxt'] = null;
				//				this['IPTxt'] = null;
				//				this['OffLineTxt'] = null;
				//				if(this.hasOwnProperty('SelfTxt'))
				//				{
				//					this['SelfTxt'] = null;
				//				}
				//				var dos : DisplayObject;
				//				while(numChildren > 0)
				//				{
				//					dos = this.removeChildAt(0);
				//					dos = null;
				//				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<mx:GlowFilter id="glow"  blurX="5" blurY="5" strength="2.5" color="#000000" />
	</fx:Declarations>
	<s:Image x="0" y="0" source="{DDZhouHLSkinClass.user_bg0}"/>
	<!--<s:Image x="0" y="0" source="assets/自己背景.png"/>-->
	<!--
	<s:Group x="225" y="9" id="head_mask">
		<s:Ellipse width="66" height="66">
			<s:fill>
				<s:SolidColor color="0xcccccc"/>
			</s:fill>
		</s:Ellipse>
	</s:Group>
	-->
	<s:Image x="227" y="11" id="head"/><!--mask="{head_mask}"-->
	<!--
	<com:GameMCButton id="AddFriend" x="0" y="10" targetClass="{DDZhouHLSkinClass.AddFriendRight}" />
	-->
	<s:Label id="OffLineTxt" color="0xFF0000" x="232" y="-20"  width="80" fontSize="16" fontWeight="bold" textAlign="center" filters="{[glow]}"/>
	<s:Label id="IDTxt" x="128" y="6" color="#FFFFFF" filters="{[glow]}"/>
	
	
	<s:Label id="IPTxt" x="128" y="33" color="#FFFFFF" filters="{[glow]}"/>
	<s:Label id="SelfTxt" x="142" y="60" color="#FFFF00" filters="{[glow]}"/>
</s:Group>
